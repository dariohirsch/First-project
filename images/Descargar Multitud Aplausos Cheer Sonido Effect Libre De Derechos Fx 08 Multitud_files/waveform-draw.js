var BAR_WIDTH=2;var BAR_SPACE=2;var BAR_COLOR="#2b2b2b";var SHADOW_BAR_COLOR="#bcbcbc";var ACTIVE_BAR_COLOR="#1B95E0";var ACTIVE_SHADOW_BAR_COLOR="#8FCBF0";var SIMPLIFY_TYPE="AVERAGE";var PADDING_WAVEFORM=20;var HAS_SHADOW=true;var resizeTimer;(function(){var sqr=function(x){return x*x;};var distSquared=function(p1,p2){return sqr(p1[0]-p2[0])+sqr(p1[1]-p2[1]);};var Line=function(p1,p2){this.p1=p1;this.p2=p2;this.lengthSquared=distSquared(p1,p2);};Line.prototype={getRatio:function(point){var p1=this.p1,p2=this.p2;var segmentLength=this.lengthSquared;if(segmentLength===0){return distSquared(point,p1);}
return((point[0]-p1[0])*(p2[0]-p1[0])+
(point[1]-p1[1])*(p2[1]-p1[1]))/segmentLength;},distanceToSquared:function(point){var p1=this.p1,p2=this.p2;var t=this.getRatio(point);if(t<0){return distSquared(point,p1);}
if(t>1){return distSquared(point,p2);}
return distSquared(point,[p1[0]+t*(p2[0]-p1[0]),p1[1]+t*(p2[1]-p1[1])]);},distanceTo:function(point){return Math.sqrt(this.distanceToSquared(point));}};window.simplifyDouglasPeucker=function(points,pointsToKeep){var start=new Date().getTime();var weights=[];var len=points.length;function douglasPeucker(start,end){if(end>start+1){var line=new Line(points[start],points[end]);var maxDist=-1;var maxDistIndex=0;var dist;for(var i=start+1;i<end;i+=1){dist=line.distanceToSquared(points[i]);if(dist>maxDist){maxDist=dist;maxDistIndex=i;}}
weights[maxDistIndex]=maxDist;douglasPeucker(start,maxDistIndex);douglasPeucker(maxDistIndex,end);}}
douglasPeucker(0,len-1);weights[0]=Infinity;weights[len-1]=Infinity;var weightsDescending=weights.slice();weightsDescending.sort(function(a,b){return b-a;});var maxTolerance=weightsDescending[pointsToKeep-1];var result=points.filter(function(d,i){return weights[i]>=maxTolerance;});var end=new Date().getTime();window.simplifyDouglasPeucker.stats[pointsToKeep]=end-start;return result;};window.simplifyDouglasPeucker.stats={};})();const shuffleArray=(array)=>{var currentIndex=array.length,randomIndex;while(0!==currentIndex){randomIndex=Math.floor(Math.random()*currentIndex);currentIndex--;[array[currentIndex],array[randomIndex]]=[array[randomIndex],array[currentIndex]];}
return array;}
const simplifyAverage=(points,remainingNumber)=>{let pointsLength=points.length;let toEliminateNumber=pointsLength-remainingNumber;let index=0;let copyPoints=[];while(toEliminateNumber--){if(index>=pointsLength-1){points=[...copyPoints,...points.slice(index)];pointsLength=points.length;if(toEliminateNumber>=parseInt(pointsLength/2)){index=0;copyPoints=[];}
else{let iteratorStep=parseInt(pointsLength/toEliminateNumber);for(let index=0;index<pointsLength&&toEliminateNumber--;index+=iteratorStep){points[index]=parseInt((points[index]+points[index+1])/2);points[index+1]=-1;}
points=points.filter(point=>{return point>-1;});return points;}}
let averagePoint=parseInt((points[index]+points[index+1])/2);copyPoints.push(averagePoint);index+=2;}
points=[...copyPoints,...points.slice(index)];return points;}
const getMousePos=(canvas,evt)=>{var rect=canvas.getBoundingClientRect();return{x:evt.clientX-rect.left,y:evt.clientY-rect.top};}
const triggerResizeWaveform=()=>{if(jQuery(".waveform-container").length>0){$("#list-videos .waveform-container canvas").css("width",$("#list-videos .waveform-length-bpm").width()-$("#list-videos .length-bpm").width()-PADDING_WAVEFORM-1).css("height",$("#list-videos .waveform-container").height()-1);$(".main-section-video .waveform-container canvas").css("width",$(".main-section-video .waveform-container").width()-1).css("height",$(".main-section-video .waveform-container").height()-1);clearTimeout(resizeTimer);resizeTimer=setTimeout(function(){drawWaveform("js--audio-waveform-canvas");drawWaveform("js--audio-waveform-list-canvas");},100);}}
const handleWaveformCanvasOnMouseMove=(e)=>{let canvas=document.getElementById(e.target.id);let mousePosition=getMousePos(canvas,e);drawWaveformItem(canvas,mousePosition.x);}
const handleWaveformCanvasOnMouseLeave=(e)=>{let canvas=document.getElementById(e.target.id);let blueWaveformContainerWidth=$("#"+e.target.id).siblings(".blue-waveform-container").width();drawWaveformItem(canvas,blueWaveformContainerWidth);}
const handleAddWaveformContainerResizeObserver=()=>{if(jQuery(".waveform-container").length>0){let widgetResizeObserver=new ResizeObserver(()=>{triggerResizeWaveform();});widgetResizeObserver.observe(jQuery(".waveform-container")[0]);}}
window.onresize=function(){triggerResizeWaveform();};$(document).ready(()=>{handleAddWaveformContainerResizeObserver();$(".js--audio-waveform-canvas").on("mousemove",e=>handleWaveformCanvasOnMouseMove(e));$(".js--audio-waveform-canvas").on("mouseleave",e=>handleWaveformCanvasOnMouseLeave(e));});const drawWaveformItem=(canvas,activeCoordinateX=0)=>{let data=0;try
{data=JSON.parse(canvas.dataset.waveformjson);}
catch(error)
{console.log("unable to fetch music data");return;}
columnsNumber=data.heights.length;var ctx=canvas.getContext("2d");ctx.beginPath();ctx.lineWidth=BAR_WIDTH;ctx.imageSmoothingEnabled=false;ctx.mozImageSmoothingEnabled=false;points=[];for(let index=0;index<columnsNumber;index++){let topHigh=parseInt(canvas.height/2)-data.heights[index]*canvas.height/data.margin.high+1;topHigh=Math.max(parseInt(topHigh),2);points.push([(BAR_SPACE+BAR_WIDTH)*index,topHigh]);}
let simplifiedIntervalLength=parseInt(canvas.width/(BAR_SPACE+BAR_WIDTH));if(SIMPLIFY_TYPE==="DOUGLAS_PEUCKER"){simplifiedPoints=simplifyDouglasPeucker(points,simplifiedIntervalLength+1);}
else if(SIMPLIFY_TYPE==="AVERAGE"){let heights=points.map((row)=>row[1]);simplifiedHeights=simplifyAverage(heights,simplifiedIntervalLength+1);simplifiedPoints=[];for(let index=0;index<simplifiedIntervalLength+1;index++){simplifiedPoints.push([(BAR_SPACE+BAR_WIDTH)*index,simplifiedHeights[index]]);}}
let secondColorThreshold=parseInt(activeCoordinateX*canvas.width/(canvas.width+PADDING_WAVEFORM));ctx.strokeStyle=ACTIVE_BAR_COLOR;for(let index=0;index<simplifiedPoints.length;index++){let heightBar=Math.abs(simplifiedPoints[index][1]-parseInt(canvas.height/2));let coordinateX=(BAR_SPACE+BAR_WIDTH)*index;if(coordinateX>=secondColorThreshold){ctx.stroke();ctx.beginPath();ctx.strokeStyle=BAR_COLOR;}
if(simplifiedPoints[index][1]+heightBar>parseInt(canvas.height/2)){heightBar=0;simplifiedPoints[index][1]=parseInt(canvas.height/2);}
if(heightBar<1){simplifiedPoints[index][1]-=(1-heightBar);heightBar=1;}
let startX=parseInt(coordinateX+BAR_WIDTH-1);let startY=parseInt(simplifiedPoints[index][1]);let endX=parseInt(coordinateX+BAR_WIDTH-1);let endY=parseInt(simplifiedPoints[index][1]+2*heightBar);if(HAS_SHADOW){endY=parseInt(simplifiedPoints[index][1]+heightBar);}
ctx.moveTo(startX,startY);ctx.lineTo(endX,endY);}
if(HAS_SHADOW){ctx.strokeStyle=ACTIVE_SHADOW_BAR_COLOR;for(let index=0;index<simplifiedPoints.length;index++){let coordinateX=(BAR_WIDTH+BAR_SPACE)*index;if(coordinateX>=secondColorThreshold){ctx.stroke();ctx.beginPath();ctx.strokeStyle=SHADOW_BAR_COLOR;}
let heightBar=Math.abs(simplifiedPoints[index][1]-parseInt(canvas.height/2));let startX=parseInt(coordinateX+BAR_WIDTH-1);let startY=parseInt(canvas.height/2);let endX=parseInt(coordinateX+BAR_WIDTH-1);let endY=parseInt(canvas.height/2)+heightBar;ctx.moveTo(startX,startY);ctx.lineTo(endX,endY);}}}
function drawWaveform(itemClass){let canvasEvents=$._data("."+itemClass,'events');if(!(canvasEvents&&canvasEvents.mousemove)){$(document).on("mousemove",".js--audio-waveform-list-canvas",(e)=>handleWaveformCanvasOnMouseMove(e));}
if(!(canvasEvents&&canvasEvents.mouseleave)){$(document).on("mouseleave",".js--audio-waveform-list-canvas",(e)=>handleWaveformCanvasOnMouseLeave(e));}
var canvasList=document.getElementsByClassName(itemClass);var canvasWidth=0;for(let canvas of canvasList){if(canvasWidth===0){do{previousParentWidth=canvas.parentElement.offsetWidth;canvas.width=canvas.parentElement.offsetWidth-1;}while(previousParentWidth!==canvas.parentElement.offsetWidth);canvas.width-=PADDING_WAVEFORM;canvasWidth=canvas.width;}
else{canvas.width=canvasWidth;}
canvas.height=canvas.parentElement.offsetHeight;drawWaveformItem(canvas,canvas.nextElementSibling.offsetWidth);}}